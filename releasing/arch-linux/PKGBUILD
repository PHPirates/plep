#@IgnoreInspection BashAddShebang
# Maintainers: Abby and Thomas at abbythomasorganisation@gmail.com
pkgname=plep
pkgver=v1.2.4
pkgrel=1
epoch=
pkgdesc=" An agenda for planning a few tasks per day right on your desktop."
arch=('any')
url="https://github.com/deltadak/plep"
license=('MIT')
groups=()
depends=('java-openjfx' 'jre8-openjdk')
makedepends=()
checkdepends=()
optdepends=()
provides=()
conflicts=()
replaces=()
backup=()
options=()
install=
changelog=
source=("${pkgname}-source::git+https://github.com/deltadak/plep.git")
noextract=()
md5sums=('SKIP')
validpgpkeys=()

build() {
	# Bash commands to build the software
	# makepkg cd's to src before build()
	cd ${pkgname}-source

    # Generate a database file
    ./gradlew build

    # Generate files in build/install/ such that plep/bin/plep can be executed, and all jars are in plep/lib
    ./gradlew installDist
}

check() {
    cd ${pkgname}-source
	./gradlew check
}

package() {
	# We will reuse the files generated by installDist, but the file build/install/plep/bin/plep which runs build/install/plep/lib/plep-vx.x.x.jar
	# only works when placed there, not when placed in /usr/bin.
	# So we create a file /usr/bin/plep, such that it will probably in PATH and plep can be executed (without sudo) in the terminal.
	# This file will call the generated plep/bin/plep file.
	# We will install the files from build/install/plep to /opt
	# Having a file /usr/bin/programname and other stuff in /usr/lib is reverse-engineered from firefox.
	# The reason we don't just directly call the jar from /usr/bin/plep is because of dependencies on other jars, putting those in classpath
	# will be handled by the generated plep/bin/plep.
	# The compiled files have to be in pkg, replicating the root hierarchy.
	mkdir -p "$pkgdir/usr/lib/$pkgname"
	mkdir -p "$pkgdir/usr/bin"

	# Copy all the installation files, keeping file attributes
	cp -a ${pkgname}-source/build/install/plep/. ${pkgdir}/usr/lib/${pkgname}

    # Create a file with a command to execute the file which calls java to execute the jar.
	echo "#!/bin/sh
/usr/lib/$pkgname/bin/$pkgname" > ${pkgdir}/usr/bin/${pkgname}

    # Copy an empty database (generated by gradle build) so we can set permissions on it
    cp ${pkgname}-source/build/classes/kotlin/plep.db ${pkgdir}/usr/lib/${pkgname}/lib

    # Since git only saves execute and not write permissions, we have to set it manually.
    # We have to make both the database and folder containing it writable in order to create a writable database
    chmod a+rwx ${pkgdir}/usr/lib/${pkgname}
    chmod a+w ${pkgdir}/usr/lib/${pkgname}/lib
    chmod a+x ${pkgdir}/usr/lib/${pkgname}/lib/${pkgname}-${pkgver}.jar
    chmod a+w ${pkgdir}/usr/lib/${pkgname}/lib/plep.db
    chmod a+x ${pkgdir}/usr/bin/${pkgname}
}
